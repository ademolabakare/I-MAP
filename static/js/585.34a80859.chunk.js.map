{"version":3,"file":"static/js/585.34a80859.chunk.js","mappings":"0MAEO,MAAMA,GAASC,EAAAA,EAAAA,KAAqB,SAAqBC,EAA4BC,GAAK,IAAhC,SAAEC,KAAcC,GAASH,EACtF,MAAMI,EAAS,IAAIC,EAAAA,OAAcH,EAAUC,GAC3C,OAAOG,EAAAA,EAAAA,GAAoBF,GAAQG,EAAAA,EAAAA,IAAcN,EAAK,CAClDO,iBAAkBJ,IAE1B,IAAG,SAAsBA,EAAQK,EAAOC,GAChCD,EAAMP,WAAaQ,EAAUR,UAC7BE,EAAOO,UAAUF,EAAMP,UAET,MAAdO,EAAMG,MAAgBH,EAAMG,OAASF,EAAUE,MAC/CR,EAAOS,QAAQJ,EAAMG,MAEC,MAAtBH,EAAMK,cAAwBL,EAAMK,eAAiBJ,EAAUI,cAC/DV,EAAOW,gBAAgBN,EAAMK,cAEZ,MAAjBL,EAAMO,SAAmBP,EAAMO,UAAYN,EAAUM,SACrDZ,EAAOa,WAAWR,EAAMO,SAEL,MAAnBZ,EAAOc,UAAoBT,EAAMU,YAAcT,EAAUS,aACjC,IAApBV,EAAMU,UACNf,EAAOc,SAASE,SAEhBhB,EAAOc,SAASG,UAG5B,ICxBaC,GAAQC,EAAAA,EAAAA,KAAuB,SAAqBd,EAAOe,GACpE,MAAMC,EAAQ,IAAIC,EAAAA,MAAajB,EAAOe,EAAQhB,kBAC9C,OAAOF,EAAAA,EAAAA,GAAoBmB,EAAOD,EACtC,IAAG,SAA2BG,EAASH,EAAOxB,EAAiB4B,GAAS,IAAxB,SAAE1B,GAAWF,GACzD6B,EAAAA,EAAAA,YAAU,WACN,MAAM,SAAEC,GAAcH,EACtB,SAASI,EAAYC,GACbA,EAAMP,QAAUK,IAChBA,EAASG,SACTL,GAAQ,GAEhB,CACA,SAASM,EAAaF,GACdA,EAAMP,QAAUK,GAChBF,GAAQ,EAEhB,CAeA,OAdAJ,EAAQW,IAAIC,GAAG,CACXC,UAAWN,EACXO,WAAYJ,IAEgB,MAA5BV,EAAQhB,kBAEQ,MAAZN,GACA4B,EAASnB,UAAUT,GAEvB4B,EAASS,OAAOf,EAAQW,MAGxBX,EAAQhB,iBAAiBgC,UAAUV,GAEhC,WACHN,EAAQW,IAAIM,IAAI,CACZJ,UAAWN,EACXO,WAAYJ,IAEhBV,EAAQhB,kBAAkBkC,cAC1BlB,EAAQW,IAAIQ,YAAYb,EAC5B,CACJ,GAAG,CACCH,EACAH,EACAI,EACA1B,GAER,I,4BCxCO0C,IAAAA,KAAOC,QAAQC,UAAUC,YAChCH,IAAAA,KAAOC,QAAQG,aAAa,CAC1BC,cAAeC,EAAQ,MACvBC,QAASD,EAAQ,MACjBE,UAAWF,EAAQ,QAGrB,MAwBA,EAxBuBG,KAErB,MAAMC,EAAS,CAAC,OAAQ,MAGxB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCC,SAAA,EAClDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAAC,yCACvCF,EAAAA,EAAAA,MAACI,EAAAA,EAAY,CAACL,OAAQA,EAAQM,KALrB,EAKiCJ,UAAU,cAAaC,SAAA,EAC/DC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACRC,IAAI,qDACJC,YAAY,2FAGdL,EAAAA,EAAAA,KAAC5D,EAAM,CAACI,SAAUoD,EAAOG,UACvBC,EAAAA,EAAAA,KAACpC,EAAK,CAAAmC,SAAC,sDAKP,C","sources":["../node_modules/react-leaflet/lib/Marker.js","../node_modules/react-leaflet/lib/Popup.js","components/InteractiveMap.js"],"sourcesContent":["import { createElementObject, createLayerComponent, extendContext } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({ position , ...options }, ctx) {\n    const marker = new LeafletMarker(position, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, function updateMarker(marker, props, prevProps) {\n    if (props.position !== prevProps.position) {\n        marker.setLatLng(props.position);\n    }\n    if (props.icon != null && props.icon !== prevProps.icon) {\n        marker.setIcon(props.icon);\n    }\n    if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n        marker.setZIndexOffset(props.zIndexOffset);\n    }\n    if (props.opacity != null && props.opacity !== prevProps.opacity) {\n        marker.setOpacity(props.opacity);\n    }\n    if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n        if (props.draggable === true) {\n            marker.dragging.enable();\n        } else {\n            marker.dragging.disable();\n        }\n    }\n});\n","import { createElementObject, createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n    const popup = new LeafletPopup(props, context.overlayContainer);\n    return createElementObject(popup, context);\n}, function usePopupLifecycle(element, context, { position  }, setOpen) {\n    useEffect(function addPopup() {\n        const { instance  } = element;\n        function onPopupOpen(event) {\n            if (event.popup === instance) {\n                instance.update();\n                setOpen(true);\n            }\n        }\n        function onPopupClose(event) {\n            if (event.popup === instance) {\n                setOpen(false);\n            }\n        }\n        context.map.on({\n            popupopen: onPopupOpen,\n            popupclose: onPopupClose\n        });\n        if (context.overlayContainer == null) {\n            // Attach to a Map\n            if (position != null) {\n                instance.setLatLng(position);\n            }\n            instance.openOn(context.map);\n        } else {\n            // Attach to container component\n            context.overlayContainer.bindPopup(instance);\n        }\n        return function removePopup() {\n            context.map.off({\n                popupopen: onPopupOpen,\n                popupclose: onPopupClose\n            });\n            context.overlayContainer?.unbindPopup();\n            context.map.removeLayer(instance);\n        };\n    }, [\n        element,\n        context,\n        setOpen,\n        position\n    ]);\n});\n","// InteractiveMap.js\r\nimport React from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { MapPin } from 'lucide-react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\n// Fix for default marker icon\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\nconst InteractiveMap = () => {\r\n  // Center coordinates for Osun State, Nigeria\r\n  const center = [7.5629, 4.5200];\r\n  const zoom = 8;\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 rounded-lg shadow mb-6\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Interactive Healthcare Facility Map</h2>\r\n      <MapContainer center={center} zoom={zoom} className=\"h-96 w-full\">\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {/* Example marker - replace with actual data */}\r\n        <Marker position={center}>\r\n          <Popup>\r\n            A sample healthcare facility in Osun State\r\n          </Popup>\r\n        </Marker>\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InteractiveMap;"],"names":["Marker","createLayerComponent","_ref","ctx","position","options","marker","LeafletMarker","createElementObject","extendContext","overlayContainer","props","prevProps","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","Popup","createOverlayComponent","context","popup","LeafletPopup","element","setOpen","useEffect","instance","onPopupOpen","event","update","onPopupClose","map","on","popupopen","popupclose","openOn","bindPopup","off","unbindPopup","removeLayer","L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","InteractiveMap","center","_jsxs","className","children","_jsx","MapContainer","zoom","TileLayer","url","attribution"],"sourceRoot":""}